lagT = 1,
k = 2)
pT2k3 <- Cycle(var_eco = scale_dat[,3],
var_inf = scale_dat[,1],
lagT = 2,
k = 3)
summary(pT2k1$state)
summary(pT1k2$state)
summary(pT2k3$state)
gT2k1 <- Cycle(var_eco = scale_dat[,3], # 工业增加值
var_inf = scale_dat[,1], # GDP平减
lagT = 2,
k = 1)
gT2k2 <- Cycle(var_eco = scale_dat[,3],
var_inf = scale_dat[,1],
lagT = 2,
k = 2)
gT1k3 <- Cycle(var_eco = scale_dat[,3],
var_inf = scale_dat[,1],
lagT = 1,
k = 3)
summary(gT2k1)
summary(gT2k1$state)
summary(gT2k2$state)
summary(gT1k3$state)
summary(gT1k1$state)
View(gT2k1)
idxMedian <- function(df, time_start, time_end){
house_num <- df[,3:ncol(df)]
# 提取指标
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- median(house_num[,i-1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_m <- idxMedian(df = house,
time_start = "1993/3/1",
time_end = "2017/12/1")
house <- read.csv('房地产企业_ROE.csv', header = T,
stringsAsFactors = F)
idxMedian <- function(df, time_start, time_end){
house_num <- df[,3:ncol(df)]
# 提取指标
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- median(house_num[,i-1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_m <- idxMedian(df = house,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT2k1,
y = idx_m)
cycleRobust <- function(dfCycle, y){
fit <- cbind(dfCycle, y[row.names(dfCycle),])
colnames(fit)[8] <- 'idx'
fit[,8] <- scale(fit[,8])
m1 <- lm(idx~过热+衰退+复苏, data = fit)
summary(m1)
}
cycleRobust(dfCycle = gT2k1,
y = idx_m)
cycleRobust <- function(dfCycle, y){
fit <- cbind(dfCycle, y[row.names(dfCycle),])
colnames(fit)[8] <- 'idx'
fit[,8] <- scale(fit[,8])
m1 <- lm(idx~过热+衰退+复苏, data = fit)
summary(m1)
}
cycleRobust(dfCycle = gT2k1,
y = idx_m)
cycleRobust <- function(dfCycle, y){
fit <- cbind(dfCycle, y[row.names(dfCycle),])
colnames(fit)[8] <- 'idx'
fit[,8] <- scale(fit[,8])
m1 <- lm(idx~state, data = fit)
summary(m1)
}
cycleRobust(dfCycle = gT2k1,
y = idx_m)
View(eco)
View(gT1k3)
idx_m
idx_house <- idxMedian(df = house,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT2k1,
y = idx_house)
Cycle <- function(var_eco, var_inf, k, lagT,
ifplot = FALSE){
# 移动平均+描述观察
k = k # 窗宽
zoo1 <- zoo(var_inf, tseries) # 通货膨胀指标
zoo2 <- zoo(var_eco, tseries) # 经济增长指标
if(k==0) dat1 <- cbind(as.data.frame(zoo1),as.vector(zoo2))
else{
rm1 <- rollmean(zoo1,k)
rm2 <- rollmean(zoo2,k)
if(ifplot){  # 是否画图
par(mfrow=c(2,1))
plot(rm1, xlab = '时间', ylab = '通货膨胀')
plot(rm2, xlab = '时间', ylab = '经济增长')
}
dat1 <- cbind(as.data.frame(rm1),as.vector(rm2))
}
colnames(dat1) <- c('通货膨胀','经济增长')
# 经济周期
lagT = lagT # 差分期数
tseries_rm <- row.names(dat1)
tseries_diff <- tseries_rm[(lagT+1):length(tseries_rm)]
eco_up <- tseries_diff[which(diff(dat1[,2], lag = lagT)>=0)] # 经济增长（减缓）期
eco_down <- tseries_diff[which(diff(dat1[,2], lag = lagT)<0)]
inflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)>=0)] # 通货膨胀（通缩）期
deflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)<0)]
overheated <- intersect(eco_up,inflation)    # 过热（美林投资时钟）
stagflation <- intersect(eco_down,inflation) # 滞涨
decline <- intersect(eco_down,deflation)     # 衰退
recovery <- intersect(eco_up,deflation)      # 复苏
state <- c()
# 1过热 2滞涨 3衰退 4复苏
for(i in 1:length(tseries_diff)){
if(tseries_diff[i] %in% overheated) state <- c(state,"过热")
else if(tseries_diff[i] %in% stagflation) state <- c(state,"滞涨")
else if(tseries_diff[i] %in% decline) state <- c(state,"衰退")
else if(tseries_diff[i] %in% recovery) state <- c(state,"复苏")
else state <- c(state, NA)
}
dat2 <- cbind(dat1[(lagT+1):nrow(dat1),],state)
# 分类变量编码
state_dummy <- as.data.frame(class.ind(dat2[,3]))
dat3 <- cbind(dat2[,c(1,2,3)], state_dummy)
return(dat3)
}
gT2k0 <- Cycle(var_eco = scale_dat[,3], # 工业增加值
var_inf = scale_dat[,1], # GDP平减
lagT = 2,
k = 0)
cycleRobust(dfCycle = gT2k0,
y = idx_house)
gT1k0 <- Cycle(var_eco = scale_dat[,3], # 工业增加值
var_inf = scale_dat[,1], # GDP平减
lagT = 1,
k = 0)
cycleRobust(dfCycle = gT1k0,
y = idx_house)
summary(gT1k0$state)
setwd('E:\\workspace_qdf/R/industryData')
houseROE <- read.csv('房地产ROE.csv', header = T,
stringsAsFactors = F)
housePRO <- read.csv('房地产净利润.csv', header = T,
stringsAsFactors = F)
View(house)
houseROE <- read.csv('房地产ROE.csv', header = T,
stringsAsFactors = F)
housePRO <- read.csv('房地产净利润.csv', header = T,
stringsAsFactors = F)
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
View(house)
View(housePRO)
idx_house <- idxMedian(df = house,
time_start = "1993/3/1",
time_end = "2017/12/1")
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
idxMedian <- function(df, time_start, time_end){
house_num <- df[,3:ncol(df)]
# 提取指标
idx <- c()
for(i in 1:ncol(house_num)){
print(i)
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- median(house_num[,i-1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
idxMedian <- function(df, time_start, time_end){
num <- df[,3:ncol(df)]
# 提取指标
idx <- c()
for(i in 1:ncol(num)){
print(num[,i])
if(class(num[,i]) == 'numeric'){
mid <- median(num[,i], na.rm = T)
}
else{
mid <- median(num[,i-1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
idxMedian <- function(df, time_start, time_end){
num <- df[,3:ncol(df)]
# 提取指标
idx <- c()
for(i in 1:ncol(num)){
print(num[,i])
if(class(num[,i]) == 'numeric'){
mid <- median(num[,i], na.rm = T)
}
else if(class(num[,i-1]) == 'numeric'){
mid <- median(num[,i-1], na.rm = T)
}
else{
mid <- median(num[,i+1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
as.numeric(housePRO[,9])
idxMedian <- function(df, time_start, time_end){
num <- df[,3:ncol(df)]
for(i in 1:ncol(num)) num[,i] <- as.numeric(num[,i])
# 提取指标
idx <- c()
for(i in 1:ncol(num)){
if(class(num[,i]) == 'numeric'){
mid <- median(num[,i], na.rm = T)
}
else if(class(num[,i-1]) == 'numeric'){
mid <- median(num[,i-1], na.rm = T)
}
else{
mid <- median(num[,i+1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
View(idx_house)
idxMedian <- function(df, time_start, time_end){
num <- df[,3:ncol(df)]
for(i in 1:ncol(num)) num[,i] <- as.numeric(num[,i])
# 提取指标
idx <- c()
for(i in 1:ncol(num)){
if(is.na(median(num[,i]))){
mid <- median(num[,i], na.rm = T)
}
else if(is.na(median(num[,i-1]))){
mid <- median(num[,i-1], na.rm = T)
}
else{
mid <- median(num[,i+1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
View(idx_house)
warnings()
is.na(housePRO[,3])
is.na(median(housePRO[,3]))
idxMedian <- function(df, time_start, time_end){
num <- df[,3:ncol(df)]
for(i in 1:ncol(num)) num[,i] <- as.numeric(num[,i])
# 提取指标
idx <- c()
for(i in 1:ncol(num)){
if(median(num[,i], na.rm = T) != NA){
mid <- median(num[,i], na.rm = T)
}
else if(median(num[,i-1], na.rm = T) != NA){
mid <- median(num[,i-1], na.rm = T)
}
else{
mid <- median(num[,i+1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
median(housePRO[,3], na.rm = T)
median(housePRO[,4], na.rm = T)
is.na(median(housePRO[,3], na.rm = T))
!is.na(median(housePRO[,3], na.rm = T))
idxMedian <- function(df, time_start, time_end){
num <- df[,3:ncol(df)]
for(i in 1:ncol(num)) num[,i] <- as.numeric(num[,i])
# 提取指标
idx <- c()
for(i in 1:ncol(num)){
if(!is.na(median(num[,i], na.rm = T))){
mid <- median(num[,i], na.rm = T)
}
else if(!is.na(median(num[,i-1], na.rm = T))){
mid <- median(num[,i-1], na.rm = T)
}
else{
mid <- median(num[,i+1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
housePRO <- read.csv('房地产净利润.csv', header = T,
stringsAsFactors = F)
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
View(idx_house)
idxMedian <- function(df, time_start, time_end){
num <- df[,3:ncol(df)]
for(i in 1:ncol(num)) num[,i] <- as.numeric(num[,i])
# 提取指标
idx <- c()
for(i in 1:ncol(num)){
mid <- median(num[,i], na.rm = T)
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
housePRO <- read.csv('房地产净利润.csv', header = T,
stringsAsFactors = F)
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
View(idx_house)
cycleRobust(dfCycle = gT1k0,
y = idx_house)
steelPRO <- read.csv('钢铁净利润.csv', header = T,
stringsAsFactors = F)
idx_steel <- idxMedian(df = steelPRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_steel)
cementPRO <- read.csv('水泥净利润.csv', header = T,
stringsAsFactors = F)
idx_cement <- idxMedian(df = cementPRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_cement)
coalPRO <- read.csv('煤炭净利润.csv', header = T,
stringsAsFactors = F)
idx_coal <- idxMedian(df = coalPRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_coal)
medicinePRO <- read.csv('医药净利润.csv', header = T,
stringsAsFactors = F)
idx_medicine <- idxMedian(df = medicinePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_medicine)
steelPRO <- read.csv('钢铁净利润.csv', header = T,
stringsAsFactors = F)
idx_steel <- idxMedian(df = steelPRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_steel)
housePRO <- read.csv('房地产净利润.csv', header = T,
stringsAsFactors = F)
idx_house <- idxMedian(df = housePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_house)
steelPRO <- read.csv('钢铁净利润.csv', header = T,
stringsAsFactors = F)
idx_steel <- idxMedian(df = steelPRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_steel)
cementPRO <- read.csv('水泥净利润.csv', header = T,
stringsAsFactors = F)
idx_cement <- idxMedian(df = cementPRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_cement)
coalPRO <- read.csv('煤炭净利润.csv', header = T,
stringsAsFactors = F)
idx_coal <- idxMedian(df = coalPRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_coal)
medicinePRO <- read.csv('医药净利润.csv', header = T,
stringsAsFactors = F)
idx_medicine <- idxMedian(df = medicinePRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_medicine)
View(gT1k0)
