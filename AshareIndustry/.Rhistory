(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
cor2[c(11:13)]/sum(abs(cor2[c(11:13)]))
cor_finan[c(6:7)]/sum(abs(cor_finan[c(6:7)]))
cor_finan[c(8:9)]/sum(abs(cor_finan[c(8:9)]))
cor_finan[c(10:11)]/sum(abs(cor_finan[c(10:11)]))
cor_finan[c(10:11)]
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果_all.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
cor_finan[c(3:5,12:13)]/sum(abs(cor_finan[c(3:5,12:13)]))
cor_finan[c(14:16)]/sum(abs(cor_finan[c(14:16)]))
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果_all.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
cor1[c(3:5)]/sum(abs(cor1[c(3:5)]))
cor2[c(11:13)]/sum(abs(cor2[c(11:13)]))
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果_all.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
r <- na.omit(result[,1:2])
cor(r)
dat <- read.csv("I:\\暖流\\城投债模型\\回归的城投债2016.csv")
target <- which(dat$发行起始日>=as.POSIXct("2014-01-01")&dat$发行起始日<=as.POSIXct("2016-12-31")&dat$发行期限.年.==7)
r_target <- na.omit(R[,1:2])
cor(r_target)
dat$发行起始日 <- as.POSIXct(x=as.character(dat$发行起始日),format="%Y/%m/%d")
target <- which(dat$发行起始日>=as.POSIXct("2014-01-01")&dat$发行起始日<=as.POSIXct("2016-12-31")&dat$发行期限.年.==7)
r_target <- na.omit(R[target,1:2])
cor(r_target)
cor(r)
(cor1 <- cor(R1)[,2])
finan <- read.csv("I:\\暖流\\城投债模型\\2016年各省市县财政数据.csv")
finan <- as.data.frame(finan[,1:13])
for (i in 1:ncol(finan)){
finan[,i] <- as.numeric(as.character(finan[,i]))
}
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果_all.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result
r <- na.omit(result[,1:2])
cor(r)
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
r_target <- na.omit(R[,1:2])
cor(r_target)
r <- na.omit(result[,1:2])
cor(r)
cor1[c(3:5)]/sum(abs(cor1[c(3:5)]))
dat <- read.csv("I:\\暖流\\城投债模型\\回归的城投债2016.csv")
dat$发行起始日 <- as.POSIXct(x=as.character(dat$发行起始日),format="%Y/%m/%d")
target <- which(dat$发行起始日>=as.POSIXct("2014-01-01")&dat$发行起始日<=as.POSIXct("2016-12-31")&dat$发行期限.年.==7)
finan <- read.csv("I:\\暖流\\城投债模型\\2016年各省市县财政数据.csv")
finan <- as.data.frame(finan[,1:13])
for (i in 1:ncol(finan)){
finan[,i] <- as.numeric(as.character(finan[,i]))
}
finan <- finan[,-1]
province <- finan[1:31,]
Quantile <- function(x){
return(quantile(x,probs=seq(0,1,0.1),na.rm=T))
}
apply(province,MARGIN = 2,FUN = Quantile)
View(finan)
finan <- read.csv("I:\\暖流\\城投债模型\\2016年各省市县财政数据.csv")
finan <- as.data.frame(finan[,1:14])
for (i in 1:ncol(finan)){
finan[,i] <- as.numeric(as.character(finan[,i]))
}
finan <- finan[,-1]
province <- finan[1:31,]
apply(province,MARGIN = 2,FUN = Quantile)
apply(province,MARGIN = 2,FUN = Quantile)[,13]
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
cor1[c(15:22)]/sum(cor1[c(15:22)])
cor1[c(15:22)]
cor1[c(23:28)]
cor1[c(15:22)]/sum(abs(cor1[c(15:22)]))
cor1[c(23:28)]/sum(abs(cor1[c(23:28)]))
cor1[c(11:12)]/sum(abs(cor1[c(11:12)]))
cor1[c(15:22)]/sum(abs(cor1[c(15:22)]))
cor1[c(11:17)]/sum(abs(cor1[c(11:17)]))
cor1[c(11:17)]
cor1[c(18:23)]/sum(abs(cor1[c(18:23)]))
cor1[c(18:23)]
(cor1 <- cor(R1)[,2])
r <- na.omit(result[,1:2])
cor(r)
dat <- read.csv("I:\\暖流\\城投债模型\\回归的城投债2016.csv")
dat$发行起始日 <- as.POSIXct(x=as.character(dat$发行起始日),format="%Y/%m/%d")
target <- which(dat$发行起始日>=as.POSIXct("2014-01-01")&dat$发行起始日<=as.POSIXct("2016-12-31")&dat$发行期限.年.==7)
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
summary(lm(data=R,票面利率~as.factor(行政分值)-1))
cor1[c(15:22)]/sum(cor1[c(15:22)])
cor1[c(15:22)]/sum(abs(cor1[c(15:22)]))
cor1[c(23:28)]/sum(abs(cor1[c(23:28)]))
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
cor1[c(11:12)]/sum(abs(cor1[c(11:12)]))
cor2[c(30:35)]/sum(abs(cor2[c(30:35)]))
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
cor2[c(11:13)]/sum(abs(cor2[c(11:13)]))
cor_finan[c(6:7)]/sum(abs(cor_finan[c(6:7)]))
cor_finan[c(8:9)]/sum(abs(cor_finan[c(8:9)]))
cor_finan[c(10:11)]/sum(abs(cor_finan[c(10:11)]))
cor_finan[c(3:5,12:13)]/sum(abs(cor_finan[c(3:5,12:13)]))
cor_finan[c(14:16)]/sum(abs(cor_finan[c(14:16)]))
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
r <- na.omit(result[,1:2])
cor(r)
cor(na.omit(result))[,2]
r <- na.omit(result[,1:2])
cor(r)
cor(na.omit(result))[,2]
(cor1 <- cor(R1)[,2])
cor1[c(3:5)]/sum(abs(cor1[c(3:5)]))
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
r_target <- na.omit(R[,1:2])
cor(r_target)
r <- na.omit(result[,1:2])
cor(r)
install.packages('lme4')
library(lme4)
library(Matrix)
library(lme4)
sleepstudy
length(sleepstudy)
length(sleepstudy$Reaction)
fm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
summary(fm1)
anova(fm1)
install.packages('lmerTest')
library(lmerTest)
fm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
summary(fm1)
getwd()
setwd('E:\\workspace_qdf/R')
library('zoo')  # 时间序列处理包
library('nnet') # 编码
eco <- read.csv('ECO.csv', header = T)
eco <- eco[-1,]
row.names(eco) <- 1:nrow(eco)
eco <- eco[82:(nrow(eco)-4),]
eco[,1] <- paste(eco[,1],'-01',sep='')
eco[,1] <- as.Date(eco[,1])
tseries <- eco[,1]
idx <- eco[,c(2,3,4,8)]
idx <- as.data.frame(apply(idx, 2, as.numeric))
draw <- seq(from=3, to=nrow(idx),by=3)
quaterData <- idx[draw,4]
tseries <- tseries[draw]
monthData <- as.data.frame(cbind(round((idx[draw-2,1]+idx[draw-1,1]+idx[draw,1])/3,4),
round((idx[draw-2,2]+idx[draw-1,2]+idx[draw,2])/3,4),
round((idx[draw-2,3]+idx[draw-1,3]+idx[draw,3])/3,4)))
dat <- as.data.frame(cbind(quaterData,monthData),
stringsAsFactors = F)
row.names(dat) <- tseries
colnames(dat) <- c('GDP平减指数','PPI', '工业增加值','CPI')
scale_dat <- as.data.frame(apply(dat, 2, scale))
Cycle <- function(var_eco, var_inf, k, lagT,
ifplot = FALSE){
# 移动平均+描述观察
k = k # 窗宽
zoo1 <- zoo(var_inf, tseries) # 通货膨胀指标
zoo2 <- zoo(var_eco, tseries) # 经济增长指标
if(k==0) dat1 <- cbind(as.data.frame(zoo1),as.vector(zoo2))
else{
rm1 <- rollmean(zoo1,k)
rm2 <- rollmean(zoo2,k)
if(ifplot){  # 是否画图
par(mfrow=c(2,1))
plot(rm1, xlab = '时间', ylab = '通货膨胀')
plot(rm2, xlab = '时间', ylab = '经济增长')
}
dat1 <- cbind(as.data.frame(rm1),as.vector(rm2))
}
colnames(dat1) <- c('通货膨胀','经济增长')
# 经济周期
lagT = lagT # 差分期数
tseries_rm <- row.names(dat1)
tseries_diff <- tseries_rm[(lagT+1):length(tseries_rm)]
eco_up <- tseries_diff[which(diff(dat1[,2], lag = lagT)>=0)] # 经济增长（减缓）期
eco_down <- tseries_diff[which(diff(dat1[,2], lag = lagT)<0)]
inflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)>=0)] # 通货膨胀（通缩）期
deflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)<0)]
overheated <- intersect(eco_up,inflation)    # 过热（美林投资时钟）
stagflation <- intersect(eco_down,inflation) # 滞涨
decline <- intersect(eco_down,deflation)     # 衰退
recovery <- intersect(eco_up,deflation)      # 复苏
state <- c()
# 1过热 2滞涨 3衰退 4复苏
for(i in 1:length(tseries_diff)){
if(tseries_diff[i] %in% overheated) state <- c(state,"过热")
else if(tseries_diff[i] %in% stagflation) state <- c(state,"滞涨")
else if(tseries_diff[i] %in% decline) state <- c(state,"衰退")
else if(tseries_diff[i] %in% recovery) state <- c(state,"复苏")
else state <- c(state, NA)
}
dat2 <- cbind(dat1[(lagT+1):nrow(dat1),],state)
# 分类变量编码
state_dummy <- as.data.frame(class.ind(dat2[,3]))
dat3 <- cbind(dat2[,c(1,2,3)], state_dummy)
return(dat3)
}
gT1k0 <- Cycle(var_eco = scale_dat[,3], # 工业增加值
var_inf = scale_dat[,1], # GDP平减
lagT = 1,
k = 0)
setwd('E:\\workspace_qdf/R')
idxMedian <- function(df, time_start, time_end){
num <- df[,3:ncol(df)]
for(i in 1:ncol(num)) num[,i] <- as.numeric(num[,i])
# 提取指标
idx <- c()
for(i in 1:ncol(num)){
mid <- median(num[,i], na.rm = T)
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
cycleRobust <- function(dfCycle, y){
fit <- cbind(dfCycle, y[row.names(dfCycle),])
colnames(fit)[8] <- 'idx'
fit[,8] <- scale(fit[,8])
m1 <- lm(idx~state, data = fit)
summary(m1)
}
setwd('E:\\workspace_qdf/R/industryData')
steelPRO <- read.csv('钢铁净利润.csv', header = T,
stringsAsFactors = F)
idx_steel <- idxMedian(df = steelPRO,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = idx_steel)
houseROE <- read.csv('房地产ROE.csv', header = T,
stringsAsFactors = F)
roe_house <- idxMedian(df = houseROE,
time_start = "1993/3/1",
time_end = "2017/12/1")
View(roe_house)
cycleRobust(dfCycle = gT1k0,
y = roe_house)
steelROE <- read.csv('钢铁ROE.csv', header = T,
stringsAsFactors = F)
roe_steel <- idxMedian(df = steelROE,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = roe_steel)
cementROE <- read.csv('水泥ROE.csv', header = T,
stringsAsFactors = F)
roe_cement <- idxMedian(df = cementROE,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = roe_cement)
coalROE <- read.csv('煤炭ROE.csv', header = T,
stringsAsFactors = F)
roe_coal <- idxMedian(df = coalROE,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = roe_coal)
medicineROE <- read.csv('医药ROE.csv', header = T,
stringsAsFactors = F)
roe_medicine <- idxMedian(df = medicineROE,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = gT1k0,
y = roe_medicine)
View(steelPRO)
View(eco)
ins2cyc <- function(csv_file, eco_cycle){
CSVFILE <- read.csv(csv_file, header = T,
stringsAsFactors = F)
idx <- idxMedian(df = CSVFILE,
time_start = "1993/3/1",
time_end = "2017/12/1")
cycleRobust(dfCycle = eco_cycle,
y = idx)
}
ins2cyc('水泥净利润.csv', gT1k0)
install.packages("C:/Wind/Wind.NET.Client/WindNET/bin/WindR.tar.gz", repos = NULL, type="source")
setwd('E:\\workspace_qdf/R/windR')
library('windR')
library('WindR')
w.start()
library('WindR')
w.start()
install.packages("C:/Wind/Wind.NET.Client/WindNET/bin/WindR.tar.gz", repos = NULL, type="source")
library('WindR')
w.start()
View(idx_steel)
house <- read.csv('房地产净利润.csv', header = T,
stringsAsFactors = F)
setwd('E:\\workspace_qdf/R/industryData')
house <- read.csv('房地产净利润.csv', header = T,
stringsAsFactors = F)
View(house)
library('WindR')
w.start()
ins2cyc(csv_file = '水泥净利润.csv', eco_cycle = gT1k0)
View(scale_dat)
pT2k1 <- Cycle(var_eco = scale_dat[,3],# 工业增加值
var_inf = scale_dat[,2], # PPI
lagT = 2,
k = 1)
summary(pT2k1)
summary(pT2k1$state)
pT1k1 <- Cycle(var_eco = scale_dat[,3],# 工业增加值
var_inf = scale_dat[,2], # PPI
lagT = 1,
k = 1)
summary(pT1k1$state)
pT1k0 <- Cycle(var_eco = scale_dat[,3],# 工业增加值
var_inf = scale_dat[,2], # PPI
lagT = 1,
k = 0)
summary(pT1k0$state)
summary(gT1k0$state)
ins2cyc(csv_file = '水泥净利润.csv', eco_cycle = pT1k0)
ins2cyc(csv_file = '钢铁净利润.csv', eco_cycle = pT1k0)
ins2cyc(csv_file = '钢铁净利润.csv', eco_cycle = gT1k0)
ins2cyc(csv_file = '钢铁净利润.csv', eco_cycle = gT1k0)
setwd('E:\\workspace_qdf/R/AshareIndustry')
dat <- read.csv('AshareIndustryAll.csv', header = T, stringsAsFactors = F)
dat <- read.csv('AshareIndustryAll.csv', header = T, stringsAsFactors = F)
View(dat)
summary(dat$申万一级行业)
summary(as.factor(dat$申万一级行业))
dat[which[dat[,2] == '采掘'],]
1
dat[,2]
dat[which(dat[,2] == '采掘'),]
caijue <- dat[which(dat[,2] == '采掘'),]
View(caijue)
? write.csv()
write.csv(dat[which(dat[,2] == '采掘'),], file = '采掘.csv')
write.csv(dat[which(dat[,2] == '采掘'),], file = '采掘净利润.csv')
summary(as.factor(dat$申万一级行业))
unique(as.factor(dat$申万一级行业))
write.csv(dat[which(dat[,2] == '采掘'),], file = '采掘净利润.csv')
write.csv(dat[which(dat[,2] == '传媒'),], file = '传媒净利润.csv')
write.csv(dat[which(dat[,2] == '电气设备'),], file = '电气设备净利润.csv')
write.csv(dat[which(dat[,2] == '电子'),], file = '电子净利润.csv')
write.csv(dat[which(dat[,2] == '房地产'),], file = '房地产净利润.csv')
write.csv(dat[which(dat[,2] == '纺织服装'),], file = '纺织服装净利润.csv')
write.csv(dat[which(dat[,2] == '非银金融'),], file = '非银金融净利润.csv')
write.csv(dat[which(dat[,2] == '钢铁'),], file = '钢铁净利润.csv')
write.csv(dat[which(dat[,2] == '公用事业'),], file = '公用事业净利润.csv')
write.csv(dat[which(dat[,2] == '国防军工'),], file = '国防军工净利润.csv')
write.csv(dat[which(dat[,2] == '化工'),], file = '化工净利润.csv')
write.csv(dat[which(dat[,2] == '机械设备'),], file = '机械设备净利润.csv')
write.csv(dat[which(dat[,2] == '计算机'),], file = '计算机净利润.csv')
write.csv(dat[which(dat[,2] == '家用电器'),], file = '家用电器净利润.csv')
write.csv(dat[which(dat[,2] == '建筑材料'),], file = '建筑材料净利润.csv')
write.csv(dat[which(dat[,2] == '建筑装饰'),], file = '建筑装饰净利润.csv')
write.csv(dat[which(dat[,2] == '交通运输'),], file = '交通运输净利润.csv')
write.csv(dat[which(dat[,2] == '农林牧渔'),], file = '农林牧渔净利润.csv')
write.csv(dat[which(dat[,2] == '汽车'),], file = '汽车净利润.csv')
write.csv(dat[which(dat[,2] == '轻工制造'),], file = '轻工制造净利润.csv')
write.csv(dat[which(dat[,2] == '商业贸易'),], file = '商业贸易净利润.csv')
write.csv(dat[which(dat[,2] == '食品饮料'),], file = '食品饮料净利润.csv')
write.csv(dat[which(dat[,2] == '通信'),], file = '通信净利润.csv')
write.csv(dat[which(dat[,2] == '休闲服务'),], file = '休闲服务净利润.csv')
write.csv(dat[which(dat[,2] == '医药生物'),], file = '医药生物净利润.csv')
write.csv(dat[which(dat[,2] == '银行'),], file = '银行净利润.csv')
write.csv(dat[which(dat[,2] == '有色金属'),], file = '有色金属净利润.csv')
write.csv(dat[which(dat[,2] == '综合'),], file = '综合净利润.csv')
