cor_finan[c(3:5,12:13)]/sum(abs(cor_finan[c(3:5,12:13)]))
cor_finan[c(14:16)]/sum(abs(cor_finan[c(14:16)]))
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
r <- na.omit(result[,1:2])
cor(r)
cor(na.omit(result))[,2]
r <- na.omit(result[,1:2])
cor(r)
cor(na.omit(result))[,2]
(cor1 <- cor(R1)[,2])
cor1[c(3:5)]/sum(abs(cor1[c(3:5)]))
result <- as.data.frame(read.csv("I:\\暖流\\城投债模型\\得分结果.csv"))
for (i in 1:ncol(result)){
result[,i] <- as.numeric(as.character(result[,i]))
}
R <- result[target,]
#r_target <- na.omit(R[,1:12])
R1 <- R[,-c(13,30:35)] #非县级
R1 <- na.omit(R1)
(cor1 <- cor(R1)[,2])
R2 <- na.omit(R) #县级
(cor2 <- cor(R2)[,2])
#财务
R_finan <- R[,c(1:2,36:49)]
R_finan <- na.omit(R_finan)
(cor_finan <- cor(R_finan)[,2])
r_target <- na.omit(R[,1:2])
cor(r_target)
r <- na.omit(result[,1:2])
cor(r)
install.packages('lme4')
library(lme4)
library(Matrix)
library(lme4)
sleepstudy
length(sleepstudy)
length(sleepstudy$Reaction)
fm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
summary(fm1)
anova(fm1)
install.packages('lmerTest')
library(lmerTest)
fm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
summary(fm1)
getwd()
setwd('E:\\workspace_qdf/R')
setwd('E:\\workspace_qdf/R')
library('zoo')  # 时间序列处理包
eco <- read.csv('ECO.csv', header = T)
eco <- eco[-1,]
row.names(eco) <- 1:nrow(eco)
eco <- eco[82:(nrow(eco)-4),]
eco[,1] <- paste(eco[,1],'-01',sep='')
eco[,1] <- as.Date(eco[,1])
tseries <- eco[,1]
idx <- eco[,c(2,3,4,8)]
idx <- as.data.frame(apply(idx, 2, as.numeric))
draw <- seq(from=3, to=nrow(idx),by=3)
quaterData <- idx[draw,4]
tseries <- tseries[draw]
monthData <- as.data.frame(cbind(round((idx[draw-2,1]+idx[draw-1,1]+idx[draw,1])/3,4),
round((idx[draw-2,2]+idx[draw-1,2]+idx[draw,2])/3,4),
round((idx[draw-2,3]+idx[draw-1,3]+idx[draw,3])/3,4)))
dat <- as.data.frame(cbind(quaterData,monthData),
stringsAsFactors = F)
row.names(dat) <- tseries
colnames(dat) <- c('GDP平减指数','PPI', '工业增加值','CPI')
scale_dat <- as.data.frame(apply(dat, 2, scale))
k = 1 # 滑动宽度
zoo1 <- zoo(scale_dat[,1], tseries) # 平减指数
rm1 <- rollmean(zoo1,k)
zoo2 <- zoo(scale_dat[,3], tseries) # 工业增加值
rm2 <- rollmean(zoo2,k)
par(mfrow=c(2,1))
plot(rm1, xlab = '时间', ylab = '平减指数')
plot(rm2, xlab = '时间', ylab = '工业增加值')
dat1 <- cbind(as.data.frame(zoo1),as.vector(zoo2))
colnames(dat1) <- c('flation_平减指数','eco_工业增加值')
lagT = 2 # 跨期取差分
tseries_rm <- row.names(dat1)
tseries_diff <- tseries_rm[(lagT+1):length(tseries_rm)]
eco_up <- tseries_diff[which(diff(dat1[,2], lag = lagT)>=0)]
eco_down <- tseries_diff[which(diff(dat1[,2], lag = lagT)<0)]
inflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)>=0)]
deflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)<0)]
overheated <- intersect(eco_up,inflation)    # 过热
stagflation <- intersect(eco_down,inflation) # 滞涨
decline <- intersect(eco_down,deflation)     # 衰退
recovery <- intersect(eco_up,deflation)      # 复苏
state <- c()
for(i in 1:length(tseries_diff)){
if(tseries_diff[i] %in% overheated) state <- c(state,"过热")
else if(tseries_diff[i] %in% stagflation) state <- c(state,"滞涨")
else if(tseries_diff[i] %in% decline) state <- c(state,"衰退")
else if(tseries_diff[i] %in% recovery) state <- c(state,"复苏")
else state <- c(state, NA)
}
dat2 <- cbind(dat1[(lagT+1):nrow(dat1),],state)
View(dat2)
k = 1 # 滑动宽度
zoo1 <- zoo(scale_dat[,1], tseries) # 平减指数
rm1 <- rollmean(zoo1,k)
zoo2 <- zoo(scale_dat[,3], tseries) # 工业增加值
rm2 <- rollmean(zoo2,k)
par(mfrow=c(2,1))
plot(rm1, xlab = '时间', ylab = '平减指数')
plot(rm2, xlab = '时间', ylab = '工业增加值')
dat1 <- cbind(as.data.frame(rm1),as.vector(rm2))
colnames(dat1) <- c('flation_平减指数','eco_工业增加值')
lagT = 2 # 跨期取差分
tseries_rm <- row.names(dat1)
tseries_diff <- tseries_rm[(lagT+1):length(tseries_rm)]
eco_up <- tseries_diff[which(diff(dat1[,2], lag = lagT)>=0)]
eco_down <- tseries_diff[which(diff(dat1[,2], lag = lagT)<0)]
inflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)>=0)]
deflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)<0)]
overheated <- intersect(eco_up,inflation)    # 过热
stagflation <- intersect(eco_down,inflation) # 滞涨
decline <- intersect(eco_down,deflation)     # 衰退
recovery <- intersect(eco_up,deflation)      # 复苏
state <- c()
for(i in 1:length(tseries_diff)){
if(tseries_diff[i] %in% overheated) state <- c(state,"过热")
else if(tseries_diff[i] %in% stagflation) state <- c(state,"滞涨")
else if(tseries_diff[i] %in% decline) state <- c(state,"衰退")
else if(tseries_diff[i] %in% recovery) state <- c(state,"复苏")
else state <- c(state, NA)
}
dat2 <- cbind(dat1[(lagT+1):nrow(dat1),],state)
View(dat2)
library('nnet')
library('nnet')
class.ind(dat2[,3])
state_dummy <- class.ind(dat2[,3])
dat3 <- cbind(dat2, state_dummy)
View(dat3)
dat3 <- cbind(dat2[,c(1,2)], state_dummy)
state_dummy <- as.data.frame(class.ind(dat2[,3]))
View(dat3)
View(state_dummy)
View(dat3)
house <- read.csv('房地产企业_ROE.csv', header = T)
View(house)
house <- read.csv('房地产企业_ROE.csv', header = T,
stringsAsFactors = F)
View(house)
house_num <- house[,3:ncol(house)]
View(house_num)
ncol(house_num)/4
idx <- apply(house_num, 1, mean)
idx
mean_noNA <- function(vec){return(mean(vec, na.rm = T))}
idx <- apply(house_num, 1, mean_noNA)
idx
mean(house_num[,1], na.rm=T)
idx <- apply(house_num, 2, mean_noNA)
idx
idx <- apply(house_num, 2, mean_noNA)
idx
View(house_num)
idx <- apply(as.matrix(house_num), 2, mean_noNA)
idx
mean(house_num[,1], na.rm=T)
mean(house_num[,2], na.rm=T)
median(house_num[,2], na.rm=T)
house_num <- house[,3:ncol(house)]
mean_noNA <- function(vec){return(mean(vec, na.rm = T))}
idx <- apply(house_num, 2, mean_noNA)
warnings()
View(house_num)
mean(house_num[,100], na.rm=T)
mean(house_num[,100], na.rm=F)
mean(house_num[,100], na.rm=T)
idx <- apply(house_num, 1, mean_noNA)
idx
idx <- apply(house_num, 2, mean_noNA)
idx <- apply(house_num, 2, mean_noNA)
idx
idx <- apply(house_num, 2, mean_noNA)
mean(house_num[,3], na.rm=T)
median(house_num)
class(house_num[,3])
class(house_num[,2])
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- mean(median(house_num[,i-1], na.rm = T),
median(house_num[,i+1], na.rm = T))
}
idx <- c(idx, mid)
}
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else idx < c(idx, NA)
}
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else idx <- c(idx, NA)
}
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
idx <- c(idx, mid)
}
else idx <- c(idx, NA)
}
idx
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- median(house_num[,i-1], na.rm = T)
}
idx <- c(idx, NA)
}
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- median(house_num[,i-1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- median(house_num[,i-1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
idx
as.data.frame(idx)
View(house_num)
? seq.Date
as.data.frame(idx, row.names = seq.Date(from = "1993/3/1",
to = "2017/12/1",
by = 'quarter'))
as.data.frame(idx, row.names = seq.Date(from = as.Date("1993/3/1"),
to = as.Date("2017/12/1"),
by = 'quarter'))
seq.Date(from = as.Date("1993/3/1"),
to = as.Date("2017/12/1"),
by = 'quarter')
rlt <- as.data.frame(idx, row.names =
seq.Date(from = as.Date("1993/3/1"),
to = as.Date("2017/12/1"),
by = 'quarter'))
View(rlt)
rlt <- as.data.frame(idx, row.names =
as.character(seq.Date(from = as.Date("1993/3/1"),
to = as.Date("2017/12/1"),
by = 'quarter')))
View(rlt)
dat3
rlt
cbind(dat3, rlt)
View(dat3)
? cbind
merge(dat3, rlt)
a <- merge(dat3, rlt)
View(a)
View(dat3)
? merge
names(dat3)
merge(dat3, rlt, by=interaction(row.names(dat3),
row.names(rlt)))
intersect(row.names(dat3),
row.names(rlt)))
intersect(row.names(dat3),
row.names(rlt))
merge(dat3, rlt, by=intersect(row.names(dat3),
row.names(rlt)))
merge(dat3, rlt, by=intersect(row.names(dat3),
row.names(rlt)))
row.names(dat3)
rlt[row.names(dat3),]
View(rlt)
View(rlt)
fit <- rbind(dat3, rlt[row.names(dat3),])
View(fit)
fit <- rbind(dat3, rlt)
fit <- cbind(dat3, rlt[row.names(dat3),])
View(fit)
View(rlt)
View(dat3)
View(fit)
View(fit)
colnames(fit)[7] <- 'idx'
m1 <- lm(idx~ 复苏+过热+衰退+滞涨, data = fit)
m1 <- lm(idx~., data = fit)
summary(m1)
View(dat2)
View(dat3)
View(dat2)
View(dat3)
View(dat2)
fit <- cbind(dat2, rlt[row.names(dat3),])
View(fit)
colnames(fit)[4] <- 'idx'
m1 <- lm(idx~., data = fit)
summary(m1)
m1 <- lm(idx~state, data = fit)
summary(m1)
fit <- cbind(dat3, rlt[row.names(dat3),])
colnames(fit)[7] <- 'idx'
View(fit)
m1 <- lm(idx~过热+衰退+滞涨, data = fit)
summary(m1)
fit[,7] <- scale(fit[,7])
m1 <- lm(idx~过热+衰退+滞涨, data = fit)
summary(m1)
View(dat2)
View(scale_dat)
View(scale_dat)
Cycle <- function(var_eco, var_inf, k, lagT,
ifplot = FALSE){
# 移动平均+描述观察
k = k # 滑动宽度
zoo1 <- zoo(var_inf, tseries) # 平减指数
rm1 <- rollmean(zoo1,k)
zoo2 <- zoo(var_eco, tseries) # 工业增加值
rm2 <- rollmean(zoo2,k)
if(ifplot){
par(mfrow=c(2,1))
plot(rm1, xlab = '时间', ylab = '平减指数')
plot(rm2, xlab = '时间', ylab = '工业增加值')
}
# 取移动平均后的数据框（这里可修改是否使用rollmean数据）
dat1 <- cbind(as.data.frame(rm1),as.vector(rm2))
colnames(dat1) <- c('通货膨胀','经济增长')
# 经济周期
lagT = lagT # 取跨期差分
tseries_rm <- row.names(dat1)
tseries_diff <- tseries_rm[(lagT+1):length(tseries_rm)]
# 经济增长（减缓）期
eco_up <- tseries_diff[which(diff(dat1[,2], lag = lagT)>=0)]
eco_down <- tseries_diff[which(diff(dat1[,2], lag = lagT)<0)]
# 通货膨胀（通缩）期
inflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)>=0)]
deflation <- tseries_diff[which(diff(dat1[,1], lag = lagT)<0)]
# 美林投资时钟(ex:经济增长+通胀=过热)
overheated <- intersect(eco_up,inflation)    # 过热
stagflation <- intersect(eco_down,inflation) # 滞涨
decline <- intersect(eco_down,deflation)     # 衰退
recovery <- intersect(eco_up,deflation)      # 复苏
# 经济周期加入数据框
state <- c()
# 1过热 2滞涨 3衰退 4复苏
for(i in 1:length(tseries_diff)){
if(tseries_diff[i] %in% overheated) state <- c(state,"过热")
else if(tseries_diff[i] %in% stagflation) state <- c(state,"滞涨")
else if(tseries_diff[i] %in% decline) state <- c(state,"衰退")
else if(tseries_diff[i] %in% recovery) state <- c(state,"复苏")
else state <- c(state, NA)
}
dat2 <- cbind(dat1[(lagT+1):nrow(dat1),],state)
# 分类变量编码
state_dummy <- as.data.frame(class.ind(dat2[,3]))
dat3 <- cbind(dat2[,c(1,2,3)], state_dummy)
return(dat3)
}
View(scale_dat)
c1 <- Cycle(var_eco = scale_dat[,3],
var_inf = scale_dat[,1],
lagT = 1,
k = 1)
View(c1)
c2 <- Cycle(var_eco = scale_dat[,3],
var_inf = scale_dat[,1],
lagT = 2,
k = 2)
c3 <- Cycle(var_eco = scale_dat[,3],
var_inf = scale_dat[,1],
lagT = 3,
k = 3)
View(house_num)
idx_median <- function(df, time_start, time_end){
house_num <- df[,3:ncol(df)]
# 提取指标
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- median(house_num[,i-1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
}
return(rlt)
idx <- idx_median(df = house,
time_start = "1993/3/1",
time_end = "2017/12/1")
idx <- idx_median(df = house,
time_start = "1993/3/1",
time_end = "2017/12/1")
idx_m <- idx_median(df = house,
time_start = "1993/3/1",
time_end = "2017/12/1")
idxMedian <- function(df, time_start, time_end){
house_num <- df[,3:ncol(df)]
# 提取指标
idx <- c()
for(i in 1:ncol(house_num)){
if(class(house_num[,i]) == 'numeric'){
mid <- median(house_num[,i], na.rm = T)
}
else{
mid <- median(house_num[,i-1], na.rm = T)
}
idx <- c(idx, mid)
}
idx <- as.numeric(idx)
rlt <- as.data.frame(idx,
row.names =
as.character(
seq.Date(
from = as.Date(time_start),
to = as.Date(time_end),
by = 'quarter')))
return(rlt)
}
idx_m <- idxMedian(df = house,
time_start = "1993/3/1",
time_end = "2017/12/1")
View(idx_m)
View(idx_m)
cycleRobust <- function(dfCycle, y){
fit <- cbind(dfCycle, y[row.names(dfCycle),])
colnames(fit)[7] <- 'idx'
fit[,7] <- scale(fit[,7])
m1 <- lm(idx~过热+衰退+滞涨, data = fit)
summary(m1)
}
cycleRobust(dfCycle = c1,
y = idx_m)
View(c1)
cycleRobust <- function(dfCycle, y){
fit <- cbind(dfCycle, y[row.names(dfCycle),])
colnames(fit)[8] <- 'idx'
fit[,8] <- scale(fit[,8])
m1 <- lm(idx~过热+衰退+滞涨, data = fit)
summary(m1)
}
cycleRobust(dfCycle = c1,
y = idx_m)
cycleRobust(dfCycle = c2,
y = idx_m)
cycleRobust(dfCycle = c3,
y = idx_m)
c1 <- Cycle(var_eco = scale_dat[,3],
var_inf = scale_dat[,1],
lagT = 1,
k = 0)
c1 <- Cycle(var_eco = scale_dat[,3],
var_inf = scale_dat[,1],
lagT = 1,
k = 1)
cycleRobust(dfCycle = c1,
y = idx_m)
View(c1)
cycleRobust <- function(dfCycle, y){
fit <- cbind(dfCycle, y[row.names(dfCycle),])
colnames(fit)[8] <- 'idx'
fit[,8] <- scale(fit[,8])
m1 <- lm(idx~过热+衰退+复苏, data = fit)
summary(m1)
}
cycleRobust(dfCycle = c1,
y = idx_m)
